{"version":3,"sources":["components/showing-sortingButtons/showing-sortingButtons.jsx","components/spinner/spinner.jsx","components/list/list.jsx","components/checkingButtons/checkingButtons.jsx","components/pagination/pagination.jsx","itemsList.jsx","services.jsx","components/app/app.jsx","serviceWorker.js","index.js"],"names":["ShowingAndSortingButtons","props","react_default","a","createElement","className","onClick","showingAll","showingActive","showingCompleted","dateSort","titleSort","Spinner","List","state","value","hoverableItem","handleChange","e","_this","setState","target","editTitle","id","title","onEdit","hoverOn","hoverOff","_this2","this","_this$props","loaded","items","notOnEdit","onEditItem","isChecked","markChecked","markTask","submitChangeTask","removeTask","length","map","task","timeId","isDone","key","onMouseLeave","type","checked","includes","onChange","placeholder","onMouseEnter","spinner_Spinner","Component","CheckingButtons","checkAll","uncheckAll","deleteChecked","Pagination","pagination","pagesAmount","activePage","Object","toConsumableArray","Array","x","i","concat","itemsList","allItems","itemsPerPage","arguments","undefined","Math","ceil","App","tasks","templateList","showActive","showCompleted","sortByTitle","splice","indexOf","_this$state","deletedIds","forEach","push","newTasks","filter","item","showProcessedResult","_this$state2","_this$state3","checkedItems","newTask","_this$state4","newList","markedTasks","currentPage","_this$state5","filteredAndSorted","sort","b","taskA","toUpperCase","taskB","sortTasks","filterTasks","pages","result","indexLastTask","indexFirstTask","handleSubmit","_this$state6","preventDefault","Date","now","Promise","resolve","setTimeout","then","showing_sortingButtons_ShowingAndSortingButtons","onSubmit","required","checkingButtons_CheckingButtons","list","edgeItems","pagination_Pagination","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f43c890a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\n\r\nexport const ShowingAndSortingButtons = props => {\r\n  return (\r\n    <div className=\"Showing-Buttons\">\r\n      <h3>Show</h3>\r\n      <ul className=\"List-Show-Buttons\">\r\n        <li>\r\n          <button className=\"Showing-Button\" onClick={props.showingAll}>\r\n            All\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button className=\"Showing-Button\" onClick={props.showingActive}>\r\n            Active\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button className=\"Showing-Button\" onClick={props.showingCompleted}>\r\n            Completed\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <h3>Sort by</h3>\r\n      <ul className=\"List-Sort-Buttons\">\r\n        <li>\r\n          <button className=\"Sort-Button\" onClick={props.dateSort}>\r\n            Original order\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button className=\"Sort-Button\" onClick={props.titleSort}>\r\n            Title\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-wrapper\">\r\n      <section className=\"lds-roller\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </section>\r\n      <p>just a moment...</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Spinner } from '../spinner/spinner';\r\nimport './styles.css';\r\n\r\nclass List extends Component {\r\n  state = { value: '', hoverableItem: null };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  editTitle = (id, title) => {\r\n    this.setState({\r\n      value: title,\r\n    });\r\n    this.props.onEdit(id);\r\n  };\r\n\r\n  hoverOn = id => {\r\n    this.setState({ hoverableItem: id });\r\n  };\r\n\r\n  hoverOff = () => {\r\n    this.setState({ hoverableItem: null });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loaded,\r\n      //edgeItems: { indexFirstTask, indexLastTask },\r\n      items,\r\n      notOnEdit,\r\n      onEditItem,\r\n      isChecked,\r\n      markChecked,\r\n      markTask,\r\n      submitChangeTask,\r\n      removeTask,\r\n    } = this.props;\r\n\r\n    if (!loaded) return <Spinner />;\r\n\r\n    return items.length ? (\r\n      <ul className=\"List\">\r\n        {items.map(task => {\r\n          const { timeId, isDone } = task;\r\n          if (timeId === onEditItem) {\r\n            return (\r\n              <li className=\"tasks\" key={timeId} onMouseLeave={notOnEdit}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isChecked.includes(timeId)}\r\n                  onChange={e => markChecked(timeId, e)}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"New task...\"\r\n                  value={this.state.value}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <input type=\"checkbox\" checked={isDone} onChange={e => markTask(timeId, e)} />\r\n                <button\r\n                  className=\"Edit-button\"\r\n                  onClick={() => submitChangeTask(this.state.value, timeId)}\r\n                >\r\n                  Save\r\n                </button>\r\n                <button className=\"Delete-button\" onClick={notOnEdit}>\r\n                  Cancel\r\n                </button>\r\n              </li>\r\n            );\r\n          } else if (this.state.hoverableItem === timeId) {\r\n            return (\r\n              <li className=\"tasks\" key={timeId} onMouseLeave={this.hoverOff}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isChecked.includes(timeId)}\r\n                  onChange={e => markChecked(timeId, e)}\r\n                />\r\n                <span className={isDone ? 'marked-title' : 'regular-title'}>{task.task}</span>\r\n                <input type=\"checkbox\" checked={isDone} onChange={e => markTask(timeId, e)} />\r\n                <button className=\"Edit-button\" onClick={() => this.editTitle(timeId, task.task)}>\r\n                  Edit\r\n                </button>\r\n                <button className=\"Delete-button\" onClick={() => removeTask(timeId)}>\r\n                  Remove\r\n                </button>\r\n              </li>\r\n            );\r\n          } else\r\n            return (\r\n              <li className=\"tasks\" key={timeId} onMouseEnter={() => this.hoverOn(timeId)}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isChecked.includes(timeId)}\r\n                  onChange={e => markChecked(timeId, e)}\r\n                />\r\n                <span className={isDone ? 'marked-title wide' : 'regular-title wide'}>\r\n                  {task.task}\r\n                </span>\r\n              </li>\r\n            );\r\n        })}\r\n      </ul>\r\n    ) : (\r\n      <h3 className=\"NoTasksText\">No tasks yet</h3>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport const CheckingButtons = props => {\r\n  return (\r\n    <div className=\"Checking-Buttons\">\r\n      <button className=\"Checking-Button\" onClick={props.checkAll}>\r\n        Check All\r\n      </button>\r\n      <button className=\"Checking-Button\" onClick={props.uncheckAll}>\r\n        Uncheck All\r\n      </button>\r\n      <button className=\"Checking-Button\" onClick={props.deleteChecked}>\r\n        Delete Selected\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nexport const Pagination = props => {\r\n  const { pagination, pagesAmount, activePage } = props;\r\n\r\n  return pagesAmount > 1 ? (\r\n    <div className=\"Container-List\">\r\n      {[...Array(pagesAmount)].map((x, i) => (\r\n        <button\r\n          className={`Pagination-button ${activePage === i + 1 ? 'active' : ''}`}\r\n          key={i}\r\n          id={i + 1}\r\n          onClick={e => pagination(+e.target.id)}\r\n        >\r\n          {i + 1}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  ) : null;\r\n};\r\n","export default [\r\n  {\r\n    task: 'Buy horse',\r\n    timeId: 1553171609032,\r\n    isDone: false,\r\n  },\r\n  {\r\n    task: 'Become markup developer',\r\n    timeId: 1553171609040,\r\n    isDone: true,\r\n  },\r\n  {\r\n    task: 'Learn pixel perfect',\r\n    timeId: 1553171609050,\r\n    isDone: false,\r\n  },\r\n  {\r\n    task: 'Master fluent English',\r\n    timeId: 1553171609060,\r\n    isDone: true,\r\n  },\r\n  {\r\n    task: 'Run 40000 meters and not die',\r\n    timeId: 1553171609070,\r\n    isDone: false,\r\n  },\r\n  {\r\n    task: 'Become React Jedy',\r\n    timeId: 1553171609080,\r\n    isDone: true,\r\n  },\r\n  {\r\n    task: 'Take out garbage',\r\n    timeId: 1553171609090,\r\n    isDone: false,\r\n  },\r\n  {\r\n    task: 'Play soccer',\r\n    timeId: 1553171609100,\r\n    isDone: true,\r\n  },\r\n  {\r\n    task: 'Write message on Instagram',\r\n    timeId: 1553171609110,\r\n    isDone: false,\r\n  },\r\n  {\r\n    task: 'Move tables',\r\n    timeId: 1553171609120,\r\n    isDone: true,\r\n  },\r\n  {\r\n    task: 'Win on ping-pong ',\r\n    timeId: 1553171609130,\r\n    isDone: false,\r\n  },\r\n  {\r\n    task: 'Jump over the rainbow',\r\n    timeId: 1553171609140,\r\n    isDone: false,\r\n  },\r\n  {\r\n    task: 'Be ace',\r\n    timeId: 1553171609150,\r\n    isDone: true,\r\n  },\r\n  {\r\n    task: 'Finish to-do list',\r\n    timeId: 1553171609160,\r\n    isDone: false,\r\n  },\r\n  {\r\n    task: \"Don't miss any lefted Champions League match\",\r\n    timeId: 1553171609170,\r\n    isDone: true,\r\n  },  {\r\n    task: '1',\r\n    timeId: 155317169032,\r\n    isDone: false,\r\n  },  {\r\n    task: '2',\r\n    timeId: 155371609032,\r\n    isDone: true,\r\n  },  {\r\n    task: '3',\r\n    timeId: 155317160902,\r\n    isDone: true,\r\n  },  {\r\n    task: '4',\r\n    timeId: 155317609032,\r\n    isDone: true,\r\n  },  {\r\n    task: '5',\r\n    timeId: 15531324609032,\r\n    isDone: true,\r\n  },  {\r\n    task: '6',\r\n    timeId: 1553459032,\r\n    isDone: true,\r\n  },  {\r\n    task: '7',\r\n    timeId: 155343509032,\r\n    isDone: true,\r\n  },  {\r\n    task: '8',\r\n    timeId: 155314509032,\r\n    isDone: true,\r\n  },  {\r\n    task: '9',\r\n    timeId: 155345365709032,\r\n    isDone: true,\r\n  },  {\r\n    task: '10',\r\n    timeId: 1553154032,\r\n    isDone: false,\r\n  },  {\r\n    task: '11',\r\n    timeId: 14561609032,\r\n    isDone: true,\r\n  },  {\r\n    task: '12',\r\n    timeId:6374632,\r\n    isDone: false,\r\n  },  {\r\n    task: '13',\r\n    timeId: 155235434609032,\r\n    isDone: true,\r\n  },  {\r\n    task: '14',\r\n    timeId: 15534575634032,\r\n    isDone: false,\r\n  },  {\r\n    task: '15',\r\n    timeId: 155135246357432,\r\n    isDone: true,\r\n  },  {\r\n    task: '16',\r\n    timeId: 15532569032,\r\n    isDone: false,\r\n  },  {\r\n    task: '17',\r\n    timeId: 151346354632,\r\n    isDone: true,\r\n  },  {\r\n    task: '18',\r\n    timeId: 15531325465032,\r\n    isDone: false,\r\n  },  {\r\n    task: '19',\r\n    timeId: 153524635032,\r\n    isDone: true,\r\n  },  {\r\n    task: '20',\r\n    timeId: 155317246532,\r\n    isDone: false,\r\n  },  {\r\n    task: '21',\r\n    timeId: 1523465609032,\r\n    isDone: true,\r\n  },\r\n];\r\n","export function sortTasks(allItems, sortByTitle) {\r\n  if (sortByTitle) {\r\n    allItems.sort((a, b) => {\r\n      const taskA = a.task.toUpperCase();\r\n      const taskB = b.task.toUpperCase();\r\n      if (taskA < taskB) {\r\n        return -1;\r\n      }\r\n      if (taskA > taskB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    return allItems;\r\n  } else return allItems;\r\n}\r\n\r\nexport function filterTasks(allItems, showActive, showCompleted) {\r\n  if (showActive) {\r\n    return allItems.filter(task => !task.isDone);\r\n  } else if (showCompleted) {\r\n    return allItems.filter(task => task.isDone);\r\n  } else return allItems;\r\n}\r\n\r\nexport const pagesAmount = (allItems, itemsPerPage = 10) =>\r\n  Math.ceil(allItems.length / itemsPerPage);\r\n","import React, { Component } from 'react';\r\nimport { ShowingAndSortingButtons } from '../showing-sortingButtons/showing-sortingButtons';\r\nimport List from '../list/list';\r\nimport { CheckingButtons } from '../checkingButtons/checkingButtons';\r\nimport { Pagination } from '../pagination/pagination';\r\nimport templateList from '../../itemsList';\r\nimport { sortTasks, filterTasks, pagesAmount } from '../../services';\r\n\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    value: '',\r\n    tasks: templateList,\r\n    items: [],\r\n    pagesAmount: 0,\r\n    onEdit: 0,\r\n    isChecked: [],\r\n    showActive: false,\r\n    showCompleted: false,\r\n    sortByTitle: false,\r\n    loaded: false,\r\n    activePage: 1,\r\n  };\r\n\r\n  componentDidMount() {\r\n    new Promise(resolve => setTimeout(resolve, 2000)).then(() => {\r\n      this.setState({ loaded: true });\r\n      return this.showProcessedResult();\r\n    });\r\n  }\r\n\r\n  markChecked = id => {\r\n    const checked = [...this.state.isChecked];\r\n    if (!checked.includes(id)) {\r\n      this.setState({ isChecked: [...checked, id] });\r\n    } else {\r\n      checked.splice(checked.indexOf(id), 1);\r\n      this.setState({ isChecked: checked });\r\n    }\r\n  };\r\n\r\n  deleteChecked = () => {\r\n    const { tasks, isChecked, items } = this.state;\r\n\r\n    const deletedIds = [];\r\n    const checked = [];\r\n\r\n    items.forEach(e => {\r\n      if (isChecked.includes(e.timeId)) deletedIds.push(e.timeId);\r\n    });\r\n    const newTasks = tasks.filter(e => !deletedIds.includes(e.timeId));\r\n\r\n    newTasks.forEach(item => {\r\n      if (isChecked.includes(item.timeId)) {\r\n        checked.push(item.timeId);\r\n      }\r\n    });\r\n\r\n    this.setState(\r\n      {\r\n        tasks: newTasks,\r\n        isChecked: checked,\r\n      },\r\n      () => this.showProcessedResult()\r\n    );\r\n  };\r\n\r\n  uncheckAll = () => {\r\n    const { items, isChecked } = this.state;\r\n    const checked = [...isChecked];\r\n\r\n    items.forEach((item, i) => {\r\n      if (checked.includes(item.timeId)) {\r\n        checked.splice(checked.indexOf(item.timeId), 1);\r\n      }\r\n    });\r\n    this.setState({ isChecked: [...checked] });\r\n  };\r\n\r\n  checkAll = () => {\r\n    const { isChecked, items } = this.state;\r\n\r\n    const checkedItems = [];\r\n    items.forEach((item, i) => {\r\n      if (!isChecked.includes(item.timeId)) {\r\n        checkedItems.push(items[i].timeId);\r\n      }\r\n    });\r\n    this.setState({ isChecked: [...isChecked, ...checkedItems] });\r\n  };\r\n\r\n  submitChangeTask = (newTask, id) => {\r\n    const { tasks } = this.state;\r\n    tasks.forEach((task, i) => {\r\n      if (task.timeId === id) {\r\n        const newTasks = [...tasks];\r\n        newTasks[i].task = newTask;\r\n        this.setState({ tasks: newTasks, onEdit: 0 });\r\n      }\r\n    });\r\n  };\r\n\r\n  notOnEdit = () => {\r\n    this.setState({\r\n      onEdit: 0,\r\n    });\r\n  };\r\n\r\n  onEdit = id => {\r\n    this.setState({\r\n      onEdit: id,\r\n    });\r\n  };\r\n\r\n  removeTask = id => {\r\n    const { tasks, isChecked } = this.state;\r\n    const checked = [...isChecked];\r\n\r\n    const newList = tasks.filter(task => task.timeId !== id);\r\n    if (checked.includes(id)) checked.splice(checked.indexOf(id), 1);\r\n\r\n    this.setState(\r\n      {\r\n        tasks: newList,\r\n        isChecked: checked,\r\n      },\r\n      () => this.showProcessedResult()\r\n    );\r\n  };\r\n\r\n  markTask = (id, e) => {\r\n    const { tasks } = this.state;\r\n    tasks.forEach((task, i) => {\r\n      if (task.timeId === id) {\r\n        const markedTasks = [...tasks];\r\n        markedTasks[i].isDone = e.target.checked;\r\n        this.setState({ tasks: markedTasks });\r\n      }\r\n    });\r\n  };\r\n\r\n  showingAll = () => {\r\n    this.setState({ showActive: false, showCompleted: false }, () => this.showProcessedResult());\r\n  };\r\n\r\n  showingActive = () => {\r\n    this.setState({ showActive: true, showCompleted: false }, () => this.showProcessedResult());\r\n  };\r\n\r\n  showingCompleted = () => {\r\n    this.setState({ showActive: false, showCompleted: true }, () => this.showProcessedResult());\r\n  };\r\n  dateSort = () => {\r\n    this.setState({ sortByTitle: false }, () => this.showProcessedResult());\r\n  };\r\n\r\n  titleSort = () => {\r\n    this.setState({ sortByTitle: true }, () => this.showProcessedResult());\r\n  };\r\n\r\n  pagination = activePage => {\r\n    this.setState({ activePage }, () => this.showProcessedResult());\r\n  };\r\n\r\n  showProcessedResult = (currentPage = this.state.activePage) => {\r\n    const { showActive, showCompleted, sortByTitle, tasks, activePage } = this.state;\r\n    const allItems = [...tasks];\r\n\r\n    const filteredAndSorted = sortTasks(\r\n      filterTasks(allItems, showActive, showCompleted),\r\n      sortByTitle\r\n    );\r\n\r\n    const pages = pagesAmount(filteredAndSorted);\r\n    this.setState({ pagesAmount: pages });\r\n\r\n    const pagination = (allItems, currentPage) => {\r\n      const tasksPerPage = 10;\r\n      const differIndexFromFirstToLast = 9;\r\n      const indexLastTask = currentPage * tasksPerPage - 1;\r\n      const indexFirstTask = indexLastTask - differIndexFromFirstToLast;\r\n\r\n      if (pages && activePage > pages) {\r\n        this.setState({ activePage: pages }, () => this.showProcessedResult());\r\n      }\r\n      return allItems.filter((e, i) => indexFirstTask <= i && i <= indexLastTask);\r\n    };\r\n\r\n    const result = pagination(filteredAndSorted, currentPage);\r\n\r\n    this.setState({ items: result });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { tasks, value } = this.state;\r\n    e.preventDefault();\r\n\r\n    this.setState(\r\n      {\r\n        tasks: [\r\n          ...tasks,\r\n          {\r\n            task: value,\r\n            timeId: Date.now(),\r\n            isDone: false,\r\n          },\r\n        ],\r\n        onEdit: null,\r\n        isChecked: [],\r\n        value: '',\r\n      },\r\n      () => this.showProcessedResult()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ShowingAndSortingButtons\r\n          showingAll={this.showingAll}\r\n          showingActive={this.showingActive}\r\n          showingCompleted={this.showingCompleted}\r\n          dateSort={this.dateSort}\r\n          titleSort={this.titleSort}\r\n        />\r\n        <div>\r\n          <h1 className=\"Title\">\r\n            <span>TO-DO LIST</span>\r\n          </h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Task...\"\r\n              value={this.state.value}\r\n              onChange={this.handleChange}\r\n              className=\"Input\"\r\n              required\r\n            />\r\n            <button className=\"add-button\" type=\"submit\" value=\"Submit\">\r\n              ADD NEW TASK\r\n            </button>\r\n          </form>\r\n          <CheckingButtons\r\n            checkAll={this.checkAll}\r\n            deleteChecked={this.deleteChecked}\r\n            uncheckAll={this.uncheckAll}\r\n          />\r\n          <List\r\n            loaded={this.state.loaded}\r\n            showProcessedResult={this.showProcessedResult}\r\n            isChecked={this.state.isChecked}\r\n            notOnEdit={this.notOnEdit}\r\n            onEditItem={this.state.onEdit}\r\n            edgeItems={this.state.edgeItems}\r\n            items={this.state.items}\r\n            removeTask={this.removeTask}\r\n            markTask={this.markTask}\r\n            onEdit={this.onEdit}\r\n            submitChangeTask={this.submitChangeTask}\r\n            markChecked={this.markChecked}\r\n          />\r\n          <Pagination\r\n            activePage={this.state.activePage}\r\n            pagesAmount={this.state.pagesAmount}\r\n            pagination={this.pagination}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from '../src/components/app/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}